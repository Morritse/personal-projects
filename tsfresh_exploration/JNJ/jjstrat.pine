//@version=6
indicator('JNJ Strategy', overlay = true)

// === Core Parameters ===
vwapLength = input.int(50, 'VWAP Length')
mfiLength = input.int(9, 'MFI Length')
regimeWindow = input.int(20, 'Regime Window')
mfiOversold = input.float(30, 'MFI Oversold', minval = 0, maxval = 100)
mfiBearExit = input.float(55, 'MFI Bear Exit', minval = 0, maxval = 100)
mfiBullExit = input.float(75, 'MFI Bull Exit', minval = 0, maxval = 100)

// === Get XLV Data for Regime ===
xlv = request.security('XLV', 'D', close) // Daily timeframe for regime
xlv_returns = ta.change(xlv) / xlv[1]
xlv_ret = ta.sma(xlv_returns, regimeWindow) * 252
xlv_vol = ta.stdev(xlv_returns, regimeWindow) * math.sqrt(252)
xlv_vol67 = ta.percentile_nearest_rank(xlv_vol, regimeWindow, 67)

string regime = if xlv_ret > 0 and xlv_vol > xlv_vol67
    'bull_high_vol'
else if xlv_ret <= 0 and xlv_vol > xlv_vol67
    'bear_high_vol'
else
    'none'

// === VWAP Calculation ===
float typical = (high + low + close) / 3
float vwap50 = ta.sma(typical * volume, 50) / ta.sma(volume, 50)

// === MFI Calculation ===
float mfi = ta.mfi(hlc3, mfiLength)

// === OBV Calculation ===
float obv = ta.obv
float obvChange = ta.change(obv)

// === Signal Generation ===
bool isOversold = mfi < mfiOversold
bool isBelowVWAP = close < vwap50
bool isOBVFalling = obvChange < 0
bool isHighVol = regime != 'none'

// Exit conditions
float mfiExitLevel = regime == 'bear_high_vol' ? mfiBearExit : mfiBullExit
bool isExit = close > vwap50 or mfi > mfiExitLevel

// === Plotting ===
// VWAP Line
plot(vwap50, 'VWAP 50H', color = color.new(color.blue, 0), linewidth = 2)

// Entry Signals (only in high vol regime)
plotshape(isOversold and isBelowVWAP and isOBVFalling and isHighVol, title = 'Entry Signal', style = shape.triangleup, location = location.belowbar, color = color.new(color.green, 20), size = size.normal)

// Exit Signals
plotshape(isExit and isHighVol, title = 'Exit Signal', style = shape.triangledown, location = location.abovebar, color = color.new(color.red, 20), size = size.normal)

// === Status Table ===
var table statusTable = table.new(position.top_right, 2, 7, border_width = 1, bgcolor = color.new(color.black, 60))
if barstate.islast
    table.cell(statusTable, 0, 0, 'Last Update', bgcolor = color.new(color.gray, 60))
    table.cell(statusTable, 1, 0, str.format('{0,date,HH:mm:ss}', time), bgcolor = color.new(color.gray, 60))

    table.cell(statusTable, 0, 1, 'XLV Vol', bgcolor = color.new(color.gray, 60))
    table.cell(statusTable, 1, 1, str.tostring(xlv_vol * 100, '#.##') + '%', bgcolor = color.new(color.gray, 60))

    color regimeColor = regime == 'none' ? color.gray : regime == 'bull_high_vol' ? color.green : color.red
    table.cell(statusTable, 0, 2, 'Regime', bgcolor = color.new(color.gray, 60))
    table.cell(statusTable, 1, 2, regime, bgcolor = color.new(regimeColor, 60))

    table.cell(statusTable, 0, 3, 'MFI', bgcolor = color.new(color.gray, 60))
    table.cell(statusTable, 1, 3, str.tostring(mfi, '#.##') + (isOversold ? ' (Oversold)' : ''), bgcolor = isOversold ? color.new(color.green, 60) : color.new(color.gray, 60))

    table.cell(statusTable, 0, 4, 'VWAP', bgcolor = color.new(color.gray, 60))
    table.cell(statusTable, 1, 4, str.tostring(vwap50, '#.##') + (isBelowVWAP ? ' (Below)' : ' (Above)'), bgcolor = isBelowVWAP ? color.new(color.red, 60) : color.new(color.green, 60))

    table.cell(statusTable, 0, 5, 'OBV', bgcolor = color.new(color.gray, 60))
    table.cell(statusTable, 1, 5, isOBVFalling ? 'Falling' : 'Rising', bgcolor = isOBVFalling ? color.new(color.red, 60) : color.new(color.green, 60))

    string signal = isHighVol ? isOversold and isBelowVWAP and isOBVFalling ? 'ENTRY' : isExit ? 'EXIT' : 'WAIT' : 'NO REGIME'
    color signalColor = signal == 'ENTRY' ? color.green : signal == 'EXIT' ? color.red : color.gray
    table.cell(statusTable, 0, 6, 'Signal', bgcolor = color.new(color.gray, 60))
    table.cell(statusTable, 1, 6, signal, bgcolor = color.new(signalColor, 60))

// === Alerts ===
alertcondition(isOversold and isBelowVWAP and isOBVFalling and isHighVol, title = 'Entry Signal', message = 'High Vol Regime - Price below VWAP, MFI oversold, OBV falling')
alertcondition(isExit and isHighVol, title = 'Exit Signal', message = 'Exit - Price above VWAP or MFI overbought')
